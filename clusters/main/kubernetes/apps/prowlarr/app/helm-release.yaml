apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: prowlarr
    namespace: prowlarr
spec:
    interval: 15m
    chart:
        spec:
            chart: prowlarr
            version: 17.1.7
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: prowlarr
    values:
        TZ: America/Los_Angeles
        addons:
            codeserver:
                enabled: false
            netshoot:
                enabled: false
            vpn:
                type: disabled
        configmap:
            dashboard:
                data:
                    prowlarr.json: '{{ .Files.Get "dashboard.json" | indent 8 }}'
                enabled: true
                labels:
                    grafana_dashboard: "1"
        credentials:
            prowlarr:
                name: prowlarr
                type: s3
                url: ${VOLSYNC_S3_URL}
                bucket: ${VOLSYNC_S3_BUCKET}
                accessKey: ${VOLSYNC_S3_ACCESSKEY}
                secretKey: ${VOLSYNC_S3_SECRETKEY}
                encrKey: ${VOLSYNC_S3_ENCKEY}
        exportarrImage:
            pullPolicy: IfNotPresent
            repository: ghcr.io/onedr0p/exportarr
            tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
        ingress:
            main:
                enabled: false
        metrics:
            main:
                enabled: false
                endpoints:
                    - path: /metrics
                      port: metrics
                prometheusRule:
                    enabled: false
                targetSelector: metrics
                type: servicemonitor
        persistence:
            config:
                enabled: true
                readOnly: false
                size: ""
                storageClass: ""
                targetSelector:
                    exportarr:
                        exportarr:
                            mountPath: /config
                            readOnly: true
                    main:
                        main:
                            mountPath: /config
                volsync:
                    - credentials: prowlarr
                      dest:
                        enabled: true
                      name: cfg
                      src:
                        enabled: false
                      type: restic
        podOptions:
            dnsConfig:
                nameservers:
                    - 8.8.8.8
                    - 8.8.4.4
            hostNetwork: true
        release_name: prowlarr
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                readOnlyRootFilesystem: false
                runAsGroup: 568
                runAsUser: 568
            pod:
                fsGroupChangePolicy: OnRootMismatch
        service:
            main:
                enabled: true
                loadBalancerIP: ""
                ports:
                    main:
                        port: 9696
                type: LoadBalancer
            metrics:
                enabled: true
                ports:
                    metrics:
                        enabled: true
                        port: 9697
                        targetSelector: exportarr
                targetSelector: exportarr
                type: ClusterIP
        updated: true
        workload:
            exportarr:
                enabled: true
                podSpec:
                    containers:
                        exportarr:
                            args:
                                - prowlarr
                            enabled: true
                            env:
                                CONFIG: /config/config.xml
                                INTERFACE: 0.0.0.0
                                PORT: '{{ .Values.service.metrics.ports.metrics.port }}'
                                URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
                            imageSelector: exportarrImage
                            primary: true
                            probes:
                                liveness:
                                    enabled: true
                                    path: /healthz
                                    port: '{{ .Values.service.metrics.ports.metrics.port }}'
                                    type: http
                                readiness:
                                    enabled: true
                                    path: /healthz
                                    port: '{{ .Values.service.metrics.ports.metrics.port }}'
                                    type: http
                                startup:
                                    enabled: true
                                    path: /healthz
                                    port: '{{ .Values.service.metrics.ports.metrics.port }}'
                                    type: http
                replicas: 1
                strategy: RollingUpdate
                type: Deployment
            main:
                podSpec:
                    containers:
                        main:
                            env:
                                PROWLARR__AUTHENTICATION_METHOD: ""
                                PROWLARR__PORT: '{{ .Values.service.main.ports.main.port }}'
                            probes:
                                liveness:
                                    path: /ping
                                readiness:
                                    path: /ping
                                startup:
                                    type: tcp
                replicas: 1
                type: Deployment
